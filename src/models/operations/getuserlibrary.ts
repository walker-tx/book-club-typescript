/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetUserLibraryRequest = {
  userId: number;
  limit?: number | undefined;
  offset?: number | null | undefined;
};

export type Results = {
  id: number;
  title: string;
  author: string;
  isbn10: string;
};

/**
 * Books found
 */
export type GetUserLibraryResponseBody = {
  next: string | null;
  previous: string | null;
  results: Array<Results>;
};

export type GetUserLibraryResponse = {
  result: GetUserLibraryResponseBody;
};

/** @internal */
export const GetUserLibraryRequest$inboundSchema: z.ZodType<
  GetUserLibraryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  userId: z.number(),
  limit: z.number().int().default(10),
  offset: z.nullable(z.number().int().default(0)),
});

/** @internal */
export type GetUserLibraryRequest$Outbound = {
  userId: number;
  limit: number;
  offset: number | null;
};

/** @internal */
export const GetUserLibraryRequest$outboundSchema: z.ZodType<
  GetUserLibraryRequest$Outbound,
  z.ZodTypeDef,
  GetUserLibraryRequest
> = z.object({
  userId: z.number(),
  limit: z.number().int().default(10),
  offset: z.nullable(z.number().int().default(0)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetUserLibraryRequest$ {
  /** @deprecated use `GetUserLibraryRequest$inboundSchema` instead. */
  export const inboundSchema = GetUserLibraryRequest$inboundSchema;
  /** @deprecated use `GetUserLibraryRequest$outboundSchema` instead. */
  export const outboundSchema = GetUserLibraryRequest$outboundSchema;
  /** @deprecated use `GetUserLibraryRequest$Outbound` instead. */
  export type Outbound = GetUserLibraryRequest$Outbound;
}

/** @internal */
export const Results$inboundSchema: z.ZodType<Results, z.ZodTypeDef, unknown> =
  z.object({
    id: z.number(),
    title: z.string(),
    author: z.string(),
    isbn10: z.string(),
  });

/** @internal */
export type Results$Outbound = {
  id: number;
  title: string;
  author: string;
  isbn10: string;
};

/** @internal */
export const Results$outboundSchema: z.ZodType<
  Results$Outbound,
  z.ZodTypeDef,
  Results
> = z.object({
  id: z.number(),
  title: z.string(),
  author: z.string(),
  isbn10: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Results$ {
  /** @deprecated use `Results$inboundSchema` instead. */
  export const inboundSchema = Results$inboundSchema;
  /** @deprecated use `Results$outboundSchema` instead. */
  export const outboundSchema = Results$outboundSchema;
  /** @deprecated use `Results$Outbound` instead. */
  export type Outbound = Results$Outbound;
}

/** @internal */
export const GetUserLibraryResponseBody$inboundSchema: z.ZodType<
  GetUserLibraryResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  next: z.nullable(z.string()),
  previous: z.nullable(z.string()),
  results: z.array(z.lazy(() => Results$inboundSchema)),
});

/** @internal */
export type GetUserLibraryResponseBody$Outbound = {
  next: string | null;
  previous: string | null;
  results: Array<Results$Outbound>;
};

/** @internal */
export const GetUserLibraryResponseBody$outboundSchema: z.ZodType<
  GetUserLibraryResponseBody$Outbound,
  z.ZodTypeDef,
  GetUserLibraryResponseBody
> = z.object({
  next: z.nullable(z.string()),
  previous: z.nullable(z.string()),
  results: z.array(z.lazy(() => Results$outboundSchema)),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetUserLibraryResponseBody$ {
  /** @deprecated use `GetUserLibraryResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetUserLibraryResponseBody$inboundSchema;
  /** @deprecated use `GetUserLibraryResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetUserLibraryResponseBody$outboundSchema;
  /** @deprecated use `GetUserLibraryResponseBody$Outbound` instead. */
  export type Outbound = GetUserLibraryResponseBody$Outbound;
}

/** @internal */
export const GetUserLibraryResponse$inboundSchema: z.ZodType<
  GetUserLibraryResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  Result: z.lazy(() => GetUserLibraryResponseBody$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "Result": "result",
  });
});

/** @internal */
export type GetUserLibraryResponse$Outbound = {
  Result: GetUserLibraryResponseBody$Outbound;
};

/** @internal */
export const GetUserLibraryResponse$outboundSchema: z.ZodType<
  GetUserLibraryResponse$Outbound,
  z.ZodTypeDef,
  GetUserLibraryResponse
> = z.object({
  result: z.lazy(() => GetUserLibraryResponseBody$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    result: "Result",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetUserLibraryResponse$ {
  /** @deprecated use `GetUserLibraryResponse$inboundSchema` instead. */
  export const inboundSchema = GetUserLibraryResponse$inboundSchema;
  /** @deprecated use `GetUserLibraryResponse$outboundSchema` instead. */
  export const outboundSchema = GetUserLibraryResponse$outboundSchema;
  /** @deprecated use `GetUserLibraryResponse$Outbound` instead. */
  export type Outbound = GetUserLibraryResponse$Outbound;
}
