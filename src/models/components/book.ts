/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type Book = {
  id: number;
  title: string;
  author: string;
  isbn10: string;
};

/** @internal */
export const Book$inboundSchema: z.ZodType<Book, z.ZodTypeDef, unknown> = z
  .object({
    id: z.number(),
    title: z.string(),
    author: z.string(),
    isbn10: z.string(),
  });

/** @internal */
export type Book$Outbound = {
  id: number;
  title: string;
  author: string;
  isbn10: string;
};

/** @internal */
export const Book$outboundSchema: z.ZodType<Book$Outbound, z.ZodTypeDef, Book> =
  z.object({
    id: z.number(),
    title: z.string(),
    author: z.string(),
    isbn10: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Book$ {
  /** @deprecated use `Book$inboundSchema` instead. */
  export const inboundSchema = Book$inboundSchema;
  /** @deprecated use `Book$outboundSchema` instead. */
  export const outboundSchema = Book$outboundSchema;
  /** @deprecated use `Book$Outbound` instead. */
  export type Outbound = Book$Outbound;
}
