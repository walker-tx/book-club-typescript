lockVersion: 2.0.0
id: f2687170-559b-4ca4-9804-01aef55caf60
management:
  docChecksum: 69c68b97668c6eaeac5feac2daa59007
  docVersion: 1.0.0
  speakeasyVersion: 1.436.0
  generationVersion: 2.455.2
  releaseVersion: 0.0.2
  configChecksum: b3aba7f37ff73b96624e988168e1270b
features:
  typescript:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.11
    core: 3.18.3
    defaultEnabledRetries: 0.1.0
    devContainers: 2.90.0
    envVarSecurityUsage: 0.1.2
    globalSecurityCallbacks: 0.1.0
    globalServerURLs: 2.82.4
    nameOverrides: 2.81.2
    nullables: 0.1.0
    pagination: 2.82.7
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.2.0
    tests: 0.7.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .eslintrc.cjs
  - .gitattributes
  - .npmignore
  - CONTRIBUTING.md
  - FUNCTIONS.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/components/book.md
  - docs/models/components/paginatedbookresponse.md
  - docs/models/components/user.md
  - docs/models/errors/errort.md
  - docs/models/operations/addbooktouserlibraryrequest.md
  - docs/models/operations/addbooktouserlibraryrequestbody.md
  - docs/models/operations/createbookrequestbody.md
  - docs/models/operations/deletebookrequest.md
  - docs/models/operations/getbookrequest.md
  - docs/models/operations/getuserlibraryrequest.md
  - docs/models/operations/getuserlibraryresponse.md
  - docs/models/operations/getuserlibraryresponsebody.md
  - docs/models/operations/getuserrequest.md
  - docs/models/operations/listbooksrequest.md
  - docs/models/operations/listbooksresponse.md
  - docs/models/operations/loginrequestbody.md
  - docs/models/operations/loginresponsebody.md
  - docs/models/operations/results.md
  - docs/models/operations/signuprequestbody.md
  - docs/sdks/auth/README.md
  - docs/sdks/book/README.md
  - docs/sdks/bookclub/README.md
  - docs/sdks/library/README.md
  - docs/sdks/user/README.md
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/authLogin.ts
  - src/funcs/authSignup.ts
  - src/funcs/bookCreate.ts
  - src/funcs/bookDelete.ts
  - src/funcs/bookGet.ts
  - src/funcs/bookList.ts
  - src/funcs/libraryAdd.ts
  - src/funcs/libraryGet.ts
  - src/funcs/userGet.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/env.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/models/components/book.ts
  - src/models/components/index.ts
  - src/models/components/paginatedbookresponse.ts
  - src/models/components/user.ts
  - src/models/errors/error.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/index.ts
  - src/models/errors/sdkerror.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/operations/addbooktouserlibrary.ts
  - src/models/operations/createbook.ts
  - src/models/operations/deletebook.ts
  - src/models/operations/getbook.ts
  - src/models/operations/getuser.ts
  - src/models/operations/getuserlibrary.ts
  - src/models/operations/index.ts
  - src/models/operations/listbooks.ts
  - src/models/operations/login.ts
  - src/models/operations/signup.ts
  - src/sdk/auth.ts
  - src/sdk/book.ts
  - src/sdk/index.ts
  - src/sdk/library.ts
  - src/sdk/sdk.ts
  - src/sdk/user.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  listBooks:
    "":
      parameters:
        query:
          limit: 10
          offset: 0
      responses:
        "200":
          application/json: {"next": "https://api.example.com/endpoint?limit=10&offset=10", "previous": null, "results": [{"id": 1, "title": "Frankenstein", "author": "Mary Shelley", "isbn10": "1234567890"}]}
  createBook:
    "":
      requestBody:
        application/json: {"title": "Frankenstein", "author": "Mary Shelley", "isbn10": "0143131842"}
      responses:
        "201":
          application/json: {"id": 1, "title": "Frankenstein", "author": "Mary Shelley", "isbn10": "1234567890"}
        "400":
          application/json: {"code": 400, "message": "Bad Request"}
  getBook:
    "":
      parameters:
        path:
          id: 123
      responses:
        "200":
          application/json: {"id": 1, "title": "Frankenstein", "author": "Mary Shelley", "isbn10": "1234567890"}
  deleteBook:
    speakeasy-default-delete-book:
      parameters:
        path:
          id: 123
      responses:
        "400":
          application/json: {"code": 400, "message": "Bad Request"}
  signup:
    speakeasy-default-signup:
      requestBody:
        application/json: {"username": "jdoe123", "email": "jdoe123@email.com", "password": "mrg.qka5awy2jya*FTK"}
      responses:
        "400":
          application/json: {"code": 400, "message": "Bad Request"}
  login:
    speakeasy-default-login:
      requestBody:
        application/json: {"email": "jdoe123@email.com", "password": "mrg.qka5awy2jya*FTK"}
      responses:
        "200":
          application/json: {"token": "eyJhbGciO..."}
        "400":
          application/json: {"code": 400, "message": "Bad Request"}
  getUser:
    speakeasy-default-get-user:
      parameters:
        path:
          id: 123
      responses:
        "200":
          application/json: {"id": 1, "username": "john_doe", "email": "john_doe@example.com"}
        "400":
          application/json: {"code": 400, "message": "Bad Request"}
  getUserLibrary:
    "":
      parameters:
        path:
          userId: 123
        query:
          limit: 10
          offset: 0
      responses:
        "200":
          application/json: {"next": "https://api.example.com/endpoint?limit=10&offset=10", "previous": null, "results": [{"id": 123, "title": "Frankenstein", "author": "Mary Shelley", "isbn10": "1234567890"}]}
  addBookToUserLibrary:
    "":
      parameters:
        path:
          userId: 123
      requestBody:
        application/json: {"bookId": 123}
      responses:
        "400":
          application/json: {"code": 400, "message": "Bad Request"}
